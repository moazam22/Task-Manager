[{"/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/index.js":"1","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/reducers.js":"2","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/App.js":"3","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/reportWebVitals.js":"4","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/constants.js":"5","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/actions.js":"6","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/Components/TaskList/taskList.js":"7","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/Components/AddTask/addtask.js":"8","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/Components/updateTask/updateTask.js":"9","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/Components/completedTasks/completedTasks.js":"10"},{"size":716,"mtime":1613269144347,"results":"11","hashOfConfig":"12"},{"size":1738,"mtime":1613266635964,"results":"13","hashOfConfig":"12"},{"size":1769,"mtime":1613256699819,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":1613049934935,"results":"15","hashOfConfig":"12"},{"size":215,"mtime":1613257825383,"results":"16","hashOfConfig":"12"},{"size":911,"mtime":1613259794539,"results":"17","hashOfConfig":"12"},{"size":3413,"mtime":1613266883346,"results":"18","hashOfConfig":"12"},{"size":2104,"mtime":1613257407392,"results":"19","hashOfConfig":"12"},{"size":2957,"mtime":1613265756141,"results":"20","hashOfConfig":"12"},{"size":2308,"mtime":1613267295547,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cbkacm",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/index.js",[],"/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/reducers.js",[],"/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/App.js",["46","47"],"import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './Components/TaskList/taskList';\nimport AddTask  from './Components/AddTask/addtask';\nimport UpdateTask from './Components/updateTask/updateTask';\nimport CompletedTasks from './Components/completedTasks/completedTasks';\nimport { addTask } from './actions';\n\n\n\n\n\n\n\nclass App extends Component{\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.state = {\n\t\t\troute: 'home'\n\t\t}\n\t}\n\n\tonRouteChange = (route) =>{\n\t\tif(route == 'add')\n\t\t\tthis.setState(Object.assign({},this.state,{route: 'add'}));\n\t\telse if(route === 'home')\n\t\t\tthis.setState(Object.assign({},this.state,{route: 'home'}));\n\t\telse if(route === 'update')\n\t\t\tthis.setState(Object.assign({},this.state,{route: 'update'}));\n\t\telse if(route === 'completed')\n\t\t\tthis.setState({route: 'completed'})\n\t}\n\n\n\trender()\n\t{\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\t(this.state.route === 'home')\n\t\t\t\t\t?\t<TaskList onRouteChange = {this.onRouteChange} onUpdatingTask={this.onUpdatingTask}/>\n\t\t\t\t\t: (\n\t\t\t\t\t\tthis.state.route === 'add'\n\t\t\t\t\t\t?\t<div><AddTask onRouteChange = {this.onRouteChange} onNameChange= {this.props.onNameChange}/></div>\n\t\t\t\t\t\t: (\n\t\t\t\t\t\t\tthis.state.route === 'completed'\n\t\t\t\t\t\t\t?\t<div><CompletedTasks onRouteChange={this.onRouteChange}/></div>\n\t\t\t\t\t\t\t: \t<div><UpdateTask onRouteChange= {this.onRouteChange} /></div>\n\t\t\t\t\t\t)  \t\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\n\n\n\n// (this.state.route === 'home')\n// ?\t<TaskList onRouteChange = {this.onRouteChange} onUpdatingTask={this.onUpdatingTask}/>\n// : (\n// \tthis.state.route === 'add'\n// \t?\t<div><AddTask onRouteChange = {this.onRouteChange} onNameChange= {this.props.onNameChange}/></div>\n// \t: \t<div><UpdateTask onRouteChange= {this.onRouteChange} /></div>  \t\n// )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/reportWebVitals.js",[],"/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/constants.js",[],"/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/actions.js",[],"/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/Components/TaskList/taskList.js",["48"],"import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport 'tachyons';\nimport './taskList.css';\nimport {\n\ttaskCompleted,\n\tfetchingTaskToBeUpdated, \n} from '../../actions.js';\n\n\nclass TaskList extends Component\n{\n\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t}\n\n\n\n\n\tonCompleted = (id) =>{\n\t\tconsole.log(id);\n\t\tthis.props.onTaskComplete(id);\n\t}\n\n\n\tonUpdateTask = (id,name) =>{\n\t\t// console.log(id,name);\n\t\t// this.props.onUpdatingTask(id,name);\n\n\n\t\tthis.props.onEditTask(id);\n\t\tthis.props.onRouteChange('update');\n\t}\n\n\n\n\tonAddTask = ()=>\n\t{\n\t\t// console.log('add');\t\n\t\tthis.props.onRouteChange('add');\n\t}\n\n\n\tcompletedTask = ()=>{\n\t\tthis.props.onRouteChange('completed')\n\t}\n\n\n\n\trender()\n\t{\n\t\tconst { allTasks,filteredTasks } = this.props;\n\t\tconst completedTasks = allTasks.filter(task=>task.status === 'completed');\n\t\tconst completedCount = completedTasks.length;\n\t\t// console.log(completedCount);\n\t\tconst btnName = \"Completed (\" + completedCount + \")\"; \n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1 className=\"pa3 tableFlex\">TASKS</h1>\n\t\t\t\t\t<br/>\n\t\t\t\t<div className=\"tableFlex f4\">\n\t\t\t\t\t<input className=\"ma2\"\n\t\t\t\t\t\ttype=\"submit\" \n\t\t\t\t\t\tvalue=\"+ Add a Task\"\n\t\t\t\t\t\tonClick={this.onAddTask} \n\t\t\t\t\t/>\n\t\t\t\t\t<input className=\"ma2\" \n\t\t\t\t\t\ttype=\"submit\" \n\t\t\t\t\t\tvalue={btnName}\n\t\t\t\t\t\tonClick={this.completedTask} \n\t\t\t\t\t/>\n\t\t\t\t\t<br/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"tableFlex\">\n\t\t\t\t\t<div className=\"pa4\">\n\t\t\t\t\t\t<div className=\"overflow-auto\">\n\t\t\t\t\t\t    <table className=\"f6 w-100 mw8 center\" cellSpacing=\"0\">\n\t\t\t\t\t\t      <thead>\n\t\t\t\t\t\t        <tr>\n\t\t\t\t\t\t          <th className=\"fw6 bb b--black-20 tl pb3 pr3 bg-white\"></th>\n\t\t\t\t\t\t          <th className=\"fw6 bb b--black-20 tl pb3 pr3 bg-white\"></th>\n\t\t\t\t\t\t          <th className=\"fw6 bb b--black-20 tl pb3 pr3 bg-white\"></th>\n\t\t\t\t\t\t        </tr>\n\t\t\t\t\t\t      </thead>\n\t\t\t\t\t\t      <tbody className=\"lh-copy\">\n\t\t\t\t\t\t      \t{\n\t\t\t\t\t\t      \t\tfilteredTasks.map((task, index) => {\n\t\t\t\t\t\t      \t\t\treturn (\n\t\t\t\t\t\t      \t\t\t\t<tr key={index} className=\"f4\">\n\t\t\t\t\t\t\t\t\t          <td className=\"pv3 pr3 bb b--black-20\">\n\t\t\t\t\t\t\t\t\t          \t{task.name}<br/>\n\t\t\t\t\t\t\t\t\t          \t{task.description !== ''? <textarea className=\"textarea\" type=\"text\" value={task.description} readOnly/> : null}\n\t\t\t\t\t\t\t\t\t          </td>\n\t\t\t\t\t\t\t\t\t          <td className=\"pv3 pr3 bb pa5 b--black-20\">\n\t\t\t\t\t\t\t\t\t          \t<input \n\t\t\t\t\t\t\t\t\t          \t\ttype=\"submit\" \n\t\t\t\t\t\t\t\t\t          \t\tvalue=\"Edit\"\n\t\t\t\t\t\t\t\t\t          \t\tonClick={()=>this.onUpdateTask(task.id,task.name)}\n\t\t\t\t\t\t\t\t\t          \t/>\n\t\t\t\t\t\t\t\t\t          </td>\n\t\t\t\t\t\t\t\t\t          <td className=\"pv3 pr3 bb pa5 b--black-20\">\n\t\t\t\t\t\t\t\t\t          \t<input \n\t\t\t\t\t\t\t\t\t          \t\ttype=\"submit\" \n\t\t\t\t\t\t\t\t\t          \t\tvalue=\"Completed\"\n\t\t\t\t\t\t\t\t\t          \t\tonClick={()=>this.onCompleted(task.id)}\n\t\t\t\t\t\t\t\t\t          \t/>\n\t\t\t\t\t\t\t\t\t          </td>\t\t\t\t\t\t          \n\t\t\t\t\t\t\t\t\t        </tr>\n\t\t\t\t\t\t      \t\t\t)\n\t\t\t\t\t\t      \t\t})\n\t\t\t\t\t\t      \t} \n\t\t\t\t\t\t      </tbody>\n\t\t\t\t\t\t    </table>\n\t\t\t\t\t  \t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) =>{\n\t// console.log(state);\n\treturn {\n\t\tallTasks: state.tasks,\n\t\tfilteredTasks: state.tasks.filter(task=>task.status===\"incomplete\")\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonTaskComplete: (value)=> dispatch(taskCompleted(value)),\n\t\tonEditTask: (id) => dispatch(fetchingTaskToBeUpdated(id))\n\t}\n}\n\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskList);","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/Components/AddTask/addtask.js",["49","50"],"import React, { Component } from 'react';\nimport './addtask.css';\nimport 'tachyons';\nimport { connect } from 'react-redux';\nimport { addTask } from '../../actions';\n \n\n\nconst mapDispatchToProps = (dispatch) =>{\n\treturn {\n\t\tonAddName: (name)=>dispatch(addTask(name)),\n\t}\n}\n\n\n\nclass AddTask extends Component\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttName: ''\n\t\t}\n\t}\n\n\n\tnameChange = (event) =>{\n\t\tthis.setState({tName: event.target.value});\n\t}\n\n\n\tonAdd = () => {\n\t\t// console.log(\"on Add\");\n\t\tif(this.state.tName)\n\t\t{\n\t\t\tthis.props.onAddName(this.state.tName);\n\t\t\tthis.props.onRouteChange('home');\n\t\t}\n\t\telse\n\t\t{\n\t\t\talert(\"Please enter Task Name.\");\n\t\t}\t\n\t}\n\n\tonBack = () => {\n\t\tthis.props.onRouteChange('home');\n\t}\n\n\n\n\trender()\n\t{\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className=\"\">\n\t\t\t\t    <input \n\t\t\t\t        onClick={this.onSubmit}\n\t\t\t\t        className=\"ma2\"\n\t\t\t\t        type=\"submit\"\n\t\t\t\t        value=\"Back\"\n\t\t\t\t        onClick={this.onBack}\n\t\t\t\t    />\n\t\t\t    </div>\n\t\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 center shadow-5\">\n\t\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t\t  <div className=\"measure \">\n\t\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t\t      <legend className=\"f2 fw6 ph0 mh0\">New Task</legend>\n\t\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f3\" htmlFor=\"email-address\">Task Name</label>\n\t\t\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t        \ttype=\"text\" \n\t\t\t\t\t        \tname=\"task-name\"  \n\t\t\t\t\t        \tid=\"task-name\"\n\t\t\t\t\t        \tonChange = {this.nameChange}\n\t\t\t\t\t        />\n\t\t\t\t\t      </div>\n\t\t\t\t\t    </fieldset>\n\t\t\t\t\t    <div className=\"\">\n\t\t\t\t\t\t    <input \n\t\t\t\t\t\t        onClick={this.onSubmit}\n\t\t\t\t\t\t        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f3 dib\"\n\t\t\t\t\t\t        type=\"submit\"\n\t\t\t\t\t\t        value=\"Add\"\n\t\t\t\t\t\t        onClick={this.onAdd}\n\t\t\t\t\t\t    />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t</main>\n\t\t\t\t</article>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default connect(null,mapDispatchToProps)(AddTask);","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/Components/updateTask/updateTask.js",["51"],"import React, { Component } from 'react';\nimport 'tachyons';\nimport './updateTask.css';\nimport { connect } from 'react-redux';\nimport { updateTask } from '../../actions';\n\n\n\nclass UpdateTask extends Component {\n\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttName: this.props.taskToUpdate[0].name,\n\t\t\ttDesc: this.props.taskToUpdate[0].description\n\t\t}\n\t}\n\n\tonNameChange = (event)=> {\n\t\t// console.log(event.target.value);\n\t\tthis.setState({tName: event.target.value});\n\t}\n\n\tonDescChange = (event)=> {\n\t\t// console.log(event.target.value);\n\t\tthis.setState({tDesc: event.target.value});\n\t}\t\n\n\tonUpdate = (id,status)=>{\n\t\t// console.log(this.state.tName,this.state.tDesc);\n\t\tthis.props.onUpdatingTask(id,this.state.tName,this.state.tDesc,status);\n\t\t// console.log(\"Update\");\n\t\tthis.props.onRouteChange('home');\n\t}\n\n\trender(){\n\t\t// console.log(this.props);\n\t\tlet task = this.props.taskToUpdate[0];\n\t\t// console.log(\"Fetched Task = \",task);\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className='main pa3'>\n\t\t\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 center shadow-5\">\n\t\t\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t\t\t  <div className=\"measure \">\n\t\t\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t\t\t      <legend className=\"f2 fw6 ph0 mh0\">Edit Details</legend>\n\t\t\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t\t\t        <label className=\"db fw6 lh-copy f3\" htmlFor=\"email-address\">Task Name</label>\n\t\t\t\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t\t        \ttype=\"text\" \n\t\t\t\t\t\t        \tname=\"task-name\"  \n\t\t\t\t\t\t        \tid=\"task-name\"\n\t\t\t\t\t\t        \tdefaultValue={task.name}\n\t\t\t\t\t\t        \tonChange={this.onNameChange}\n\t\t\t\t\t\t        />\n\t\t\t\t\t\t      </div>\n\t\t\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t\t\t        <label className=\"db fw6 lh-copy f3\" htmlFor=\"email-address\">Description</label>\n\t\t\t\t\t\t        <textarea className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t\t        \ttype=\"text\" \n\t\t\t\t\t\t        \tname=\"task-name\"  \n\t\t\t\t\t\t        \tid=\"task-name\"\n\t\t\t\t\t\t        \tdefaultValue={task.description}\n\t\t\t\t\t\t        \tonChange = {this.onDescChange}\n\t\t\t\t\t\t        />\n\t\t\t\t\t\t      </div>\n\t\t\t\t\t\t    </fieldset>\n\t\t\t\t\t\t    <div className=\"\">\n\t\t\t\t\t\t\t    <input \n\t\t\t\t\t\t\t        onClick={this.onSubmit}\n\t\t\t\t\t\t\t        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f3 dib\"\n\t\t\t\t\t\t\t        type=\"submit\"\n\t\t\t\t\t\t\t        value=\"Update\"\n\t\t\t\t\t\t\t        onClick={()=>this.onUpdate(task.id,task.status)}\n\t\t\t\t\t\t\t    />\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</article>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) =>{\n\treturn {\n\t\ttaskToUpdate: state.toUpdate\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonUpdatingTask: (id,name,description,status) => dispatch(updateTask(id,name,description,status))\n\t}\n}\n\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateTask);","/home/rana/Documents/react_apps/ToDoList App/Task-Manager/src/Components/completedTasks/completedTasks.js",[],{"ruleId":"52","severity":1,"message":"53","line":7,"column":10,"nodeType":"54","messageId":"55","endLine":7,"endColumn":17},{"ruleId":"56","severity":1,"message":"57","line":25,"column":12,"nodeType":"58","messageId":"59","endLine":25,"endColumn":14},{"ruleId":"60","severity":1,"message":"61","line":14,"column":2,"nodeType":"62","messageId":"63","endLine":17,"endColumn":3},{"ruleId":"64","severity":1,"message":"65","line":62,"column":13,"nodeType":"66","endLine":62,"endColumn":34},{"ruleId":"64","severity":1,"message":"65","line":86,"column":15,"nodeType":"66","endLine":86,"endColumn":35},{"ruleId":"64","severity":1,"message":"65","line":76,"column":16,"nodeType":"66","endLine":76,"endColumn":64},"no-unused-vars","'addTask' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute"]