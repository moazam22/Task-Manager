{"ast":null,"code":"import { ADD_NEW_TASK, TASK_COMPLETED, UPDATE_TASK } from './constants.js';\nconst initialState = {\n  tasks: [{\n    name: 'Task 1',\n    description: '',\n    status: 'incomplete'\n  }, {\n    name: 'Task 2',\n    description: '',\n    status: 'incomplete'\n  }, {\n    name: 'Task 3',\n    description: '',\n    status: 'completed'\n  }, {\n    name: 'Task 4',\n    description: '',\n    status: 'incomplete'\n  }, {\n    name: 'Task 5',\n    description: '',\n    status: 'incomplete'\n  }, {\n    name: 'task 6',\n    description: '',\n    status: 'completed'\n  }, {\n    name: 'task 7',\n    description: '',\n    status: 'incomplete'\n  }]\n};\nexport const taskName = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_NEW_TASK:\n      return { ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n\n    case TASK_COMPLETED:\n      const task = state.tasks.filter(task => task.id === action.payload);\n      task = { ...task,\n        status: \"completed\"\n      };\n      const otherTasks = state.tasks.filter(task => task.id !== action.payload);\n      return { ...state,\n        tasks: [...otherTasks, task]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/rana/Documents/react_apps/ToDoList App/todo_list/src/reducers.js"],"names":["ADD_NEW_TASK","TASK_COMPLETED","UPDATE_TASK","initialState","tasks","name","description","status","taskName","state","action","type","payload","task","filter","id","otherTasks"],"mappings":"AAAA,SACCA,YADD,EAECC,cAFD,EAGCC,WAHD,QAIO,gBAJP;AAOA,MAAMC,YAAY,GAAC;AAClBC,EAAAA,KAAK,EAAC,CACL;AACCC,IAAAA,IAAI,EAAE,QADP;AAECC,IAAAA,WAAW,EAAE,EAFd;AAGCC,IAAAA,MAAM,EAAE;AAHT,GADK,EAML;AACCF,IAAAA,IAAI,EAAE,QADP;AAECC,IAAAA,WAAW,EAAE,EAFd;AAGCC,IAAAA,MAAM,EAAE;AAHT,GANK,EAWL;AACCF,IAAAA,IAAI,EAAE,QADP;AAECC,IAAAA,WAAW,EAAE,EAFd;AAGCC,IAAAA,MAAM,EAAE;AAHT,GAXK,EAgBL;AACCF,IAAAA,IAAI,EAAE,QADP;AAECC,IAAAA,WAAW,EAAE,EAFd;AAGCC,IAAAA,MAAM,EAAE;AAHT,GAhBK,EAqBL;AACCF,IAAAA,IAAI,EAAE,QADP;AAECC,IAAAA,WAAW,EAAE,EAFd;AAGCC,IAAAA,MAAM,EAAE;AAHT,GArBK,EA0BL;AACCF,IAAAA,IAAI,EAAE,QADP;AAECC,IAAAA,WAAW,EAAE,EAFd;AAGCC,IAAAA,MAAM,EAAE;AAHT,GA1BK,EA+BL;AACCF,IAAAA,IAAI,EAAC,QADN;AAECC,IAAAA,WAAW,EAAE,EAFd;AAGCC,IAAAA,MAAM,EAAE;AAHT,GA/BK;AADY,CAAnB;AAwCA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAACN,YAAP,EAAqBO,MAArB,KAA8B;AACrD,UAAOA,MAAM,CAACC,IAAd;AAEC,SAAKX,YAAL;AACC,aAAO,EAAC,GAAGS,KAAJ;AAAUL,QAAAA,KAAK,EAAC,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAgBM,MAAM,CAACE,OAAvB;AAAhB,OAAP;;AACD,SAAKX,cAAL;AACC,YAAMY,IAAI,GAAGJ,KAAK,CAACL,KAAN,CAAYU,MAAZ,CAAmBD,IAAI,IAAEA,IAAI,CAACE,EAAL,KAAUL,MAAM,CAACE,OAA1C,CAAb;AACAC,MAAAA,IAAI,GAAG,EAAC,GAAGA,IAAJ;AAASN,QAAAA,MAAM,EAAC;AAAhB,OAAP;AACA,YAAMS,UAAU,GAAGP,KAAK,CAACL,KAAN,CAAYU,MAAZ,CAAmBD,IAAI,IAAEA,IAAI,CAACE,EAAL,KAAUL,MAAM,CAACE,OAA1C,CAAnB;AACA,aAAO,EAAC,GAAGH,KAAJ;AAAUL,QAAAA,KAAK,EAAC,CAAC,GAAGY,UAAJ,EAAeH,IAAf;AAAhB,OAAP;;AACD;AACC,aAAOJ,KAAP;AAVF;AAYA,CAbM","sourcesContent":["import {\n\tADD_NEW_TASK,\n\tTASK_COMPLETED,\n\tUPDATE_TASK,\n} from './constants.js';\n\n\nconst initialState={\n\ttasks:[\n\t\t{\n\t\t\tname: 'Task 1',\n\t\t\tdescription: '',\n\t\t\tstatus: 'incomplete'\n\t\t},\n\t\t{\n\t\t\tname: 'Task 2',\n\t\t\tdescription: '',\n\t\t\tstatus: 'incomplete'\n\t\t},\n\t\t{\n\t\t\tname: 'Task 3',\n\t\t\tdescription: '',\n\t\t\tstatus: 'completed'\n\t\t},\n\t\t{\n\t\t\tname: 'Task 4',\n\t\t\tdescription: '',\n\t\t\tstatus: 'incomplete'\n\t\t},\n\t\t{\n\t\t\tname: 'Task 5',\n\t\t\tdescription: '',\n\t\t\tstatus: 'incomplete'\n\t\t},\n\t\t{\n\t\t\tname: 'task 6',\n\t\t\tdescription: '',\n\t\t\tstatus: 'completed'\n\t\t},\n\t\t{\n\t\t\tname:'task 7',\n\t\t\tdescription: '',\n\t\t\tstatus: 'incomplete'\n\t\t}\n\t]\n}\n\nexport const taskName = (state=initialState, action)=>{\n\tswitch(action.type)\n\t{\n\t\tcase ADD_NEW_TASK:\n\t\t\treturn {...state,tasks:[...state.tasks,action.payload]}\n\t\tcase TASK_COMPLETED:\n\t\t\tconst task = state.tasks.filter(task=>task.id===action.payload)\n\t\t\ttask = {...task,status:\"completed\"}\n\t\t\tconst otherTasks = state.tasks.filter(task=>task.id!==action.payload)\n\t\t\treturn {...state,tasks:[...otherTasks,task]}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n \n"]},"metadata":{},"sourceType":"module"}