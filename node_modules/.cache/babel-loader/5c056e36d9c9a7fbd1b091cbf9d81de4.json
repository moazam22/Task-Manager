{"ast":null,"code":"import { ADD_NEW_TASK, TASK_COMPLETED, UPDATE_TASK } from './constants.js';\nconst initialState = {\n  tasks: [{\n    id: 54,\n    name: 'Task 1',\n    description: '',\n    status: 'incomplete'\n  }, {\n    id: 55,\n    name: 'Task 2',\n    description: '',\n    status: 'incomplete'\n  }, {\n    id: 56,\n    name: 'Task 3',\n    description: '',\n    status: 'completed'\n  }, {\n    id: 57,\n    name: 'Task 4',\n    description: '',\n    status: 'incomplete'\n  }, {\n    id: 58,\n    name: 'Task 5',\n    description: '',\n    status: 'incomplete'\n  }, {\n    id: 59,\n    name: 'task 6',\n    description: '',\n    status: 'completed'\n  }, {\n    id: 60,\n    name: 'task 7',\n    description: '',\n    status: 'incomplete'\n  }]\n};\nexport const taskName = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_NEW_TASK:\n      return { ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n\n    case TASK_COMPLETED:\n      console.log(\"action payload = \", action.payload);\n      let task = state.tasks.filter(task => task.id === action.payload.id);\n      console.log(\"1\", task);\n      task = { ...task,\n        status: \"completed\"\n      };\n      const otherTasks = state.tasks.filter(task => task.id !== action.payload);\n      return { ...state,\n        tasks: [...otherTasks, task]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/rana/Documents/react_apps/ToDoList App/todo_list/src/reducers.js"],"names":["ADD_NEW_TASK","TASK_COMPLETED","UPDATE_TASK","initialState","tasks","id","name","description","status","taskName","state","action","type","payload","console","log","task","filter","otherTasks"],"mappings":"AAAA,SACCA,YADD,EAECC,cAFD,EAGCC,WAHD,QAIO,gBAJP;AAOA,MAAMC,YAAY,GAAC;AAClBC,EAAAA,KAAK,EAAC,CACL;AACCC,IAAAA,EAAE,EAAC,EADJ;AAECC,IAAAA,IAAI,EAAE,QAFP;AAGCC,IAAAA,WAAW,EAAE,EAHd;AAICC,IAAAA,MAAM,EAAE;AAJT,GADK,EAOL;AACCH,IAAAA,EAAE,EAAC,EADJ;AAECC,IAAAA,IAAI,EAAE,QAFP;AAGCC,IAAAA,WAAW,EAAE,EAHd;AAICC,IAAAA,MAAM,EAAE;AAJT,GAPK,EAaL;AACCH,IAAAA,EAAE,EAAC,EADJ;AAECC,IAAAA,IAAI,EAAE,QAFP;AAGCC,IAAAA,WAAW,EAAE,EAHd;AAICC,IAAAA,MAAM,EAAE;AAJT,GAbK,EAmBL;AACCH,IAAAA,EAAE,EAAC,EADJ;AAECC,IAAAA,IAAI,EAAE,QAFP;AAGCC,IAAAA,WAAW,EAAE,EAHd;AAICC,IAAAA,MAAM,EAAE;AAJT,GAnBK,EAyBL;AACCH,IAAAA,EAAE,EAAC,EADJ;AAECC,IAAAA,IAAI,EAAE,QAFP;AAGCC,IAAAA,WAAW,EAAE,EAHd;AAICC,IAAAA,MAAM,EAAE;AAJT,GAzBK,EA+BL;AACCH,IAAAA,EAAE,EAAC,EADJ;AAECC,IAAAA,IAAI,EAAE,QAFP;AAGCC,IAAAA,WAAW,EAAE,EAHd;AAICC,IAAAA,MAAM,EAAE;AAJT,GA/BK,EAqCL;AACCH,IAAAA,EAAE,EAAC,EADJ;AAECC,IAAAA,IAAI,EAAC,QAFN;AAGCC,IAAAA,WAAW,EAAE,EAHd;AAICC,IAAAA,MAAM,EAAE;AAJT,GArCK;AADY,CAAnB;AA+CA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAACP,YAAP,EAAqBQ,MAArB,KAA8B;AACrD,UAAOA,MAAM,CAACC,IAAd;AAEC,SAAKZ,YAAL;AACC,aAAO,EAAC,GAAGU,KAAJ;AAAUN,QAAAA,KAAK,EAAC,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAgBO,MAAM,CAACE,OAAvB;AAAhB,OAAP;;AACD,SAAKZ,cAAL;AACCa,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCJ,MAAM,CAACE,OAAvC;AACA,UAAIG,IAAI,GAAGN,KAAK,CAACN,KAAN,CAAYa,MAAZ,CAAmBD,IAAI,IAAEA,IAAI,CAACX,EAAL,KAAUM,MAAM,CAACE,OAAP,CAAeR,EAAlD,CAAX;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBC,IAAhB;AACAA,MAAAA,IAAI,GAAG,EAAC,GAAGA,IAAJ;AAASR,QAAAA,MAAM,EAAC;AAAhB,OAAP;AACA,YAAMU,UAAU,GAAGR,KAAK,CAACN,KAAN,CAAYa,MAAZ,CAAmBD,IAAI,IAAEA,IAAI,CAACX,EAAL,KAAUM,MAAM,CAACE,OAA1C,CAAnB;AACA,aAAO,EAAC,GAAGH,KAAJ;AAAUN,QAAAA,KAAK,EAAC,CAAC,GAAGc,UAAJ,EAAeF,IAAf;AAAhB,OAAP;;AACD;AACC,aAAON,KAAP;AAZF;AAcA,CAfM","sourcesContent":["import {\n\tADD_NEW_TASK,\n\tTASK_COMPLETED,\n\tUPDATE_TASK,\n} from './constants.js';\n\n\nconst initialState={\n\ttasks:[\n\t\t{\n\t\t\tid:54, \n\t\t\tname: 'Task 1',\n\t\t\tdescription: '',\n\t\t\tstatus: 'incomplete'\n\t\t},\n\t\t{\n\t\t\tid:55,\n\t\t\tname: 'Task 2',\n\t\t\tdescription: '',\n\t\t\tstatus: 'incomplete'\n\t\t},\n\t\t{\n\t\t\tid:56,\n\t\t\tname: 'Task 3',\n\t\t\tdescription: '',\n\t\t\tstatus: 'completed'\n\t\t},\n\t\t{\n\t\t\tid:57,\n\t\t\tname: 'Task 4',\n\t\t\tdescription: '',\n\t\t\tstatus: 'incomplete'\n\t\t},\n\t\t{\n\t\t\tid:58,\n\t\t\tname: 'Task 5',\n\t\t\tdescription: '',\n\t\t\tstatus: 'incomplete'\n\t\t},\n\t\t{\n\t\t\tid:59,\n\t\t\tname: 'task 6',\n\t\t\tdescription: '',\n\t\t\tstatus: 'completed'\n\t\t},\n\t\t{\n\t\t\tid:60,\n\t\t\tname:'task 7',\n\t\t\tdescription: '',\n\t\t\tstatus: 'incomplete'\n\t\t}\n\t]\n}\n\nexport const taskName = (state=initialState, action)=>{\n\tswitch(action.type)\n\t{\n\t\tcase ADD_NEW_TASK:\n\t\t\treturn {...state,tasks:[...state.tasks,action.payload]}\n\t\tcase TASK_COMPLETED:\n\t\t\tconsole.log(\"action payload = \",action.payload);\n\t\t\tlet task = state.tasks.filter(task=>task.id===action.payload.id)\n\t\t\tconsole.log(\"1\",task);\n\t\t\ttask = {...task,status:\"completed\"}\n\t\t\tconst otherTasks = state.tasks.filter(task=>task.id!==action.payload)\n\t\t\treturn {...state,tasks:[...otherTasks,task]}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n \n"]},"metadata":{},"sourceType":"module"}